core_cm7.h:1907:22:void __NVIC_EnableIRQ(IRQn_Type)	16	static,ignoring_inline_asm
core_cm7.h:2161:34:void __NVIC_SystemReset()	4	static,ignoring_inline_asm
MCU.h:55:14:void* operator new [](unsigned int)	16	static
MCU.h:56:14:void* operator new(unsigned int)	16	static
List.h:62:24:virtual void cList::Item::update()	16	static
Timer.h:49:5:cHwTimer::cHwTimer()	16	static
Port.h:85:22:virtual void cHwPort::Pin::setMode(cHwPort::Mode)	16	static
Port.h:93:22:virtual void cHwPort::Pin::set()	16	static
Port.h:102:22:virtual void cHwPort::Pin::set(bool)	16	static
Port.h:111:22:virtual void cHwPort::Pin::clr()	16	static
Port.h:120:22:virtual bool cHwPort::Pin::get()	16	static
Port.h:138:5:cHwPort::cHwPort()	16	static
Ethernet_MCU.h:798:10:uint32_t cHwEthernet_MCU::ETH_Init(uint16_t)	40	static
Ethernet_MCU.h:1042:6:void cHwEthernet_MCU::ETH_Start()	16	static
Ethernet_MCU.h:1074:6:void cHwEthernet_MCU::ETH_MACAddressConfig(uint32_t, uint8_t*)	32	static
Ethernet_MCU.h:1153:10:uint16_t cHwEthernet_MCU::ETH_ReadPHYRegister(uint16_t, uint16_t)	24	static
Ethernet_MCU.h:1197:10:uint32_t cHwEthernet_MCU::ETH_WritePHYRegister(uint16_t, uint16_t, uint16_t)	32	static
I2Cmaster_MCU.h:69:18:virtual void cHwI2Cmaster_N::waitForAckn(MTYPE)	16	static
I2Cmaster_MCU.h:72:18:virtual void cHwI2Cmaster_N::start()	16	static
I2Cmaster_MCU.h:75:18:virtual void cHwI2Cmaster_N::stop()	16	static
I2Cmaster_MCU.h:78:18:virtual void cHwI2Cmaster_N::sendAddr(BYTE)	16	static
I2Cmaster_MCU.h:81:18:virtual void cHwI2Cmaster_N::writeByte(BYTE)	16	static
I2Cmaster_MCU.h:84:18:virtual BYTE cHwI2Cmaster_N::readByteAck()	16	static
I2Cmaster_MCU.h:87:18:virtual BYTE cHwI2Cmaster_N::readByteNack()	16	static
Port_MCU.h:60:18:virtual void cHwPort_N::set(MTYPE)	16	static
Port_MCU.h:66:18:virtual void cHwPort_N::set(MTYPE, MTYPE)	24	static
Port_MCU.h:73:18:virtual void cHwPort_N::clr(MTYPE)	16	static
Port_MCU.h:79:19:virtual MTYPE cHwPort_N::get()	16	static
RTC.h:60:17:static BYTE cHwRTC::getDayOfWeek(BYTE, BYTE, WORD)	16	static
DataPointer.h:27:5:cDataPointer::cDataPointer()	16	static
DataPointer.h:38:5:cDataPointer::cDataPointer(BYTE*, WORD)	24	static
DataPointer.h:59:10:void cDataPointer::operator=(const cDataPointer&)	16	static
DataPointer.h:78:10:BYTE cDataPointer::set(const BYTE*, WORD)	24	static
DataPointer.h:103:11:BYTE* cDataPointer::getPtr() const	16	static
DataPointer.h:123:10:BYTE cDataPointer::isEmpty()	16	static
DataPointer.h:132:10:WORD cDataPointer::getSize()	16	static
DataPointer.h:141:10:void cDataPointer::shift(WORD)	16	static
USBdesc.h:222:17:static WORD cHwUSBdesc::getId(BYTE, BYTE, BYTE, BYTE)	16	static
USBctrl.h:40:14:BYTE cHwUSBctrl::Setup::reqRecipient()	16	static
USBctrl.h:41:14:BYTE cHwUSBctrl::Setup::reqType()	16	static
USBctrl.h:42:14:BYTE cHwUSBctrl::Setup::reqDir()	16	static
USBctrl.h:43:14:BYTE cHwUSBctrl::Setup::request()	16	static
USBctrl.h:44:14:WORD cHwUSBctrl::Setup::value()	16	static
USBctrl.h:45:14:BYTE cHwUSBctrl::Setup::valueLow()	16	static
USBctrl.h:46:14:BYTE cHwUSBctrl::Setup::valueHigh()	16	static
USBctrl.h:48:14:BYTE cHwUSBctrl::Setup::indexLow()	16	static
USBctrl.h:50:14:WORD cHwUSBctrl::Setup::length()	16	static
USBinterf.h:130:26:virtual cDataPointer cHwUSBinterf::GetDescriptor(WORD)	24	static
USBinterf.h:136:18:virtual void cHwUSBinterf::clrFeature()	16	static
USBinterf.h:141:18:virtual void cHwUSBinterf::setFeature()	16	static
USB_MCU.h:40:9:cHwUSB_0::Buffer::Buffer()	16	static
NetApp.h:9:5:cNetApplication::cNetApplication()	16	static
NetApp.h:24:18:virtual void cNetApplication::setTimeout(WORD, WORD)	16	static
NetApp.h:31:18:virtual void cNetApplication::update()	16	static
NetTransport.h:35:22:virtual void cNetTransport::Socket::openDefault()	24	static
NetTransport.h:58:22:virtual BYTE cNetTransport::Socket::isServer()	16	static
NetTransport.h:69:22:virtual void cNetTransport::Socket::update()	16	static
NetTransport.h:74:22:virtual void cNetTransport::Socket::fill(char)	16	static
NetTransport.h:79:22:virtual void cNetTransport::Socket::fill(const char*)	24	static
NetTransport.h:84:22:virtual void cNetTransport::Socket::fill(const char*, WORD)	32	static
NetTransport.h:116:22:virtual void cNetTransport::Socket::setTimeout(WORD, WORD)	16	static
NetIP.h:33:10:void cNetIP_Header::setFlags(BYTE)	16	static
NetIP.h:43:10:void cNetIP_Header::setFragmentOffset(BYTE)	16	static
NetIP.h:106:18:cNetAddr<4>& cNetIP::getAddr()	16	static
NetIP.h:111:10:bool cNetIP::isNewIP()	16	static
NetIP.h:127:9:cNetIP::cTimeOutTimer::cTimeOutTimer(cHwTimer&)	16	static
NetIP.h:139:22:virtual void cNetIP::cTimeOutTimer::update()	16	static
NetUDP.h:98:25:virtual cNetAddr<4> cNetUDP::getAddr()	24	static
NetUDP.h:103:31:virtual const cNetAddr<6> cNetUDP::getAddrPhy()	16	static
NetDHCP.h:53:18:virtual void cNetDHCP::OnUpdate()	16	static
NetICMP.h:40:10:void cNetICMP::update()	16	static
NetICMP.h:42:10:void cNetICMP::timeout()	16	static
NetTCP.h:32:14:WORD cNetTCP::Header::getDataOffset()	16	static
NetTCP.h:38:14:void cNetTCP::Header::setDataOffset(BYTE)	16	static
NetTCP.h:44:14:BYTE cNetTCP::Header::getFlags()	16	static
NetTCP.h:50:14:void cNetTCP::Header::setFlags(BYTE)	16	static
NetTCP.h:152:25:virtual cNetAddr<4> cNetTCP::getAddr()	24	static
NetTCP.h:157:31:virtual const cNetAddr<6> cNetTCP::getAddrPhy()	16	static
devDigital.h:100:18:virtual void cDevDigital::set()	16	static
devDigital.h:108:18:virtual void cDevDigital::clr()	16	static
devDigital.h:116:18:virtual void cDevDigital::toggle()	16	static
devDigital.h:135:19:virtual cDevDigital::Event cDevDigital::getEvent()	24	static
devDigital.h:154:18:virtual bool cDevDigital::operator=(bool)	16	static
devDigital.h:165:18:virtual bool cDevDigital::operator=(cDevDigital&)	24	static
devDigital.h:175:13:virtual cDevDigital::operator bool()	16	static
devDigitalIndicator.h:70:18:virtual void cDevDigitalIndicator::set()	16	static
devDigitalIndicator.h:78:18:virtual void cDevDigitalIndicator::clr()	16	static
devDigitalIndicator.h:86:18:virtual void cDevDigitalIndicator::trigger(WORD)	16	static
DisplayGraphic.h:187:18:virtual void cHwDisplayGraphic::refresh()	16	static
DisplayGraphic.h:194:28:virtual cHwDisplayFont cHwDisplayGraphic::getDefaultFont()	16	static
DisplayGraphic.h:203:18:virtual WORD cHwDisplayGraphic::getWidth()	16	static
DisplayGraphic.h:212:18:virtual WORD cHwDisplayGraphic::getHeight()	16	static
System.cpp:32:1:cSystem::cSystem(unsigned char)	16	static
System.cpp:42:6:void cSystem::start()	16	static
System.cpp:48:6:static void cSystem::disableInterrupt()	4	static,ignoring_inline_asm
System.cpp:55:6:static void cSystem::enableInterrupt()	4	static,ignoring_inline_asm
System.cpp:68:6:static void cSystem::enterISR()	4	static
System.cpp:74:6:static void cSystem::leaveISR()	4	static
System.cpp:83:6:static void cSystem::enableWatchdog(cSystem::MODE)	24	static
System.cpp:111:6:static void cSystem::disableWatchdog()	4	static
System.cpp:117:6:static void cSystem::feedWatchdog()	4	static
System.cpp:123:6:static void cSystem::reset()	8	static,ignoring_inline_asm
System.cpp:131:6:static void cSystem::delayMicroSec(short unsigned int)	16	static,ignoring_inline_asm
System.cpp:142:6:static void cSystem::delayMilliSec(short unsigned int)	16	static
System.cpp:160:6:void SystemInit()	72	static,ignoring_inline_asm
PinConfig.cpp:16:6:static void cHwPinConfig::set(GPIO_TypeDef*, BYTE, DWORD, BYTE)	64	static
PinConfig.cpp:41:6:static bool cHwPinConfig::set(cHwPinConfig::Function, DWORD)	32	static
RTOS_MCU.cpp:25:1:cHwRTOS_MCU::cHwRTOS_MCU()	16	static
RTOS_MCU.cpp:51:8:void SysTick_Handler()	8	static
RTOS_MCU.cpp:65:8:void PendSV_Handler()	8	static
ADC_MCU.cpp:22:1:cHwADC_0::cHwADC_0(cHwTimer*)	16	static
ADC_MCU.cpp:45:6:virtual void cHwADC_0::configCh(BYTE, BYTE)	24	static
ADC_MCU.cpp:76:13:virtual WORD cHwADC_0::getResult()	16	static
ADC_MCU.cpp:82:13:virtual void cHwADC_0::startCh(BYTE)	16	static
ADC_MCU.cpp:93:8:void ADC_IRQHandler()	8	static
DAC_MCU.cpp:19:1:cHwDAC_0::cHwDAC_0()	16	static
DAC_MCU.cpp:28:13:virtual void cHwDAC_0::set(WORD, BYTE)	16	static
DAC_MCU.cpp:41:13:virtual void cHwDAC_0::enable(BYTE)	16	static
Ethernet_MCU.cpp:67:1:cHwEthernet_MCU::cHwEthernet_MCU(cHwPort::Pin&, const cNetAddr<6>&)	40	static
Ethernet_MCU.cpp:249:6:virtual WORD cHwEthernet_MCU::getType()	24	static
Ethernet_MCU.cpp:269:6:virtual void cHwEthernet_MCU::PacketSend(uint8_t*, uint16_t)	24	static
Ethernet_MCU.cpp:287:6:virtual bool cHwEthernet_MCU::PacketReceive()	16	static
Ethernet_MCU.cpp:323:6:virtual void cHwEthernet_MCU::create(cNetAddr<6>, WORD)	32	static
Ethernet_MCU.cpp:338:6:void cHwEthernet_MCU::low_level_init()	24	static
Ethernet_MCU.cpp:388:9:int cHwEthernet_MCU::low_level_output(BYTE*, DWORD)	32	static
Ethernet_MCU.cpp:425:11:DWORD cHwEthernet_MCU::low_level_input(BYTE*, DWORD)	72	static
Ethernet_MCU.cpp:503:14:FrameTypeDef cHwEthernet_MCU::ETH_Get_Received_Frame()	32	static
Ethernet_MCU.cpp:535:10:uint32_t cHwEthernet_MCU::ETH_Prepare_Transmit_Descriptors(uint16_t)	32	static
Ethernet_MCU.cpp:608:6:void cHwEthernet_MCU::ETH_DMARxDescChainInit(ETH_DMADESCTypeDef*, uint8_t*, uint32_t)	32	static
Ethernet_MCU.cpp:650:10:uint32_t cHwEthernet_MCU::ETH_CheckFrameReceived()	16	static
Ethernet_MCU.cpp:687:6:void cHwEthernet_MCU::ETH_DMATxDescChainInit(ETH_DMADESCTypeDef*, uint8_t*, uint32_t)	32	static
I2Cmaster_MCU.cpp:26:1:cHwI2Cmaster_N::cHwI2Cmaster_N(cHwI2Cmaster_N::I2C_ID, cHwI2Cmaster::MODE, BYTE)	64	static
I2Cmaster_MCU.cpp:95:6:virtual BYTE cHwI2Cmaster_N::write(BYTE, BYTE*, BYTE, BYTE*, BYTE)	32	static
I2Cmaster_MCU.cpp:142:6:virtual BYTE cHwI2Cmaster_N::read(BYTE, BYTE*, BYTE, BYTE*, BYTE)	32	static
Memory_Flash.cpp:19:1:cHwMemory_Flash::cHwMemory_Flash(cHwMemory_Flash::Sector)	16	static
Memory_Flash.cpp:32:6:virtual void cHwMemory_Flash::lock()	16	static
Memory_Flash.cpp:39:6:virtual void cHwMemory_Flash::unlock()	16	static
Memory_Flash.cpp:50:6:virtual void cHwMemory_Flash::clear(DWORD)	16	static
Memory_Flash.cpp:63:6:virtual void cHwMemory_Flash::writeByte(DWORD, BYTE)	24	static
Memory_Flash.cpp:73:6:virtual BYTE cHwMemory_Flash::readByte(DWORD)	16	static
Port_MCU.cpp:19:1:cHwPort_N::cHwPort_N(cHwPort_N::PortId)	16	static
Port_MCU.cpp:43:6:virtual void cHwPort_N::setMode(MTYPE, cHwPort::Mode)	32	static
Port_MCU.cpp:55:6:virtual void cHwPort_N::setPinMode(BYTE, cHwPort::Mode)	40	static
RTC_MCU.cpp:19:1:cHwRTC_0::cHwRTC_0(cHwRTC_0::RTC_ClockConfig_t)	16	static
RTC_MCU.cpp:99:6:virtual void cHwRTC_0::set(const cHwRTC::Properties&)	24	static
RTC_MCU.cpp:143:6:virtual BYTE cHwRTC_0::get(cHwRTC::Properties&)	24	static
Timer_MCU.cpp:37:1:cHwTimer_N::cHwTimer_N(cHwTimer_N::TimerId, DWORD)	32	static
Timer_MCU.cpp:153:6:virtual void cHwTimer_N::enablePWM(BYTE, cHwTimer::Mode)	24	static
Timer_MCU.cpp:304:6:virtual void cHwTimer_N::setPWM(WORD, BYTE)	16	static
Timer_MCU.cpp:318:6:void cHwTimer_N::isr_N()	16	static
Timer_MCU.cpp:326:8:void TIM1_UP_TIM10_IRQHandler()	8	static
Timer_MCU.cpp:351:8:void TIM3_IRQHandler()	8	static
Timer_MCU.cpp:359:8:void TIM4_IRQHandler()	8	static
Timer_MCU.cpp:367:8:void TIM5_IRQHandler()	8	static
Timer_MCU.cpp:375:8:void TIM7_IRQHandler()	8	static
Timer_MCU.cpp:383:8:void TIM8_CC_IRQHandler()	8	static
UART_MCU.cpp:32:1:cHwUART_N::cHwUART_N(cHwUART_N::USART_Id, DWORD, BYTE, BYTE)	32	static
UART_MCU.cpp:195:13:virtual BYTE cHwUART_N::getByte()	16	static
UART_MCU.cpp:201:13:virtual void cHwUART_N::setByte(BYTE)	16	static
UART_MCU.cpp:207:6:void cHwUART_N::isr()	16	static
UART_MCU.cpp:223:8:void USART1_IRQHandler()	8	static
UART_MCU.cpp:232:8:void USART2_IRQHandler()	8	static
UART_MCU.cpp:241:8:void USART3_IRQHandler()	8	static
UART_MCU.cpp:250:8:void UART4_IRQHandler()	8	static
UART_MCU.cpp:259:8:void UART5_IRQHandler()	8	static
UART_MCU.cpp:268:8:void USART6_IRQHandler()	8	static
USB_MCU.cpp:26:1:cHwUSB_0::EndpointIN::EndpointIN()	16	static
USB_MCU.cpp:31:6:void cHwUSB_0::EndpointIN::init(BYTE)	16	static
USB_MCU.cpp:39:6:void cHwUSB_0::EndpointIN::config(WORD, BYTE)	16	static
USB_MCU.cpp:60:6:void cHwUSB_0::EndpointIN::flush()	24	static
USB_MCU.cpp:71:6:void cHwUSB_0::EndpointIN::reset()	16	static
USB_MCU.cpp:77:6:void cHwUSB_0::EndpointIN::start()	16	static
USB_MCU.cpp:93:6:void cHwUSB_0::EndpointIN::setStall()	16	static
USB_MCU.cpp:103:6:void cHwUSB_0::EndpointIN::clrStall()	16	static
USB_MCU.cpp:110:6:WORD cHwUSB_0::EndpointIN::write(BYTE*, WORD)	32	static
USB_MCU.cpp:125:6:void cHwUSB_0::EndpointIN::writeToFifo()	32	static
USB_MCU.cpp:150:6:void cHwUSB_0::EndpointIN::transmit(bool)	24	static
USB_MCU.cpp:186:6:void cHwUSB_0::EndpointIN::transmitZLP()	16	static
USB_MCU.cpp:198:7:DWORD cHwUSB_0::EndpointIN::getInterrupt()	24	static
USB_MCU.cpp:206:6:void cHwUSB_0::EndpointIN::clrInterrupt(DWORD)	16	static
USB_MCU.cpp:217:1:cHwUSB_0::EndpointOUT::EndpointOUT()	16	static
USB_MCU.cpp:222:6:void cHwUSB_0::EndpointOUT::init(BYTE)	16	static
USB_MCU.cpp:230:6:void cHwUSB_0::EndpointOUT::config(WORD, BYTE)	16	static
USB_MCU.cpp:256:6:void cHwUSB_0::EndpointOUT::flush()	24	static
USB_MCU.cpp:267:6:void cHwUSB_0::EndpointOUT::reset()	16	static
USB_MCU.cpp:273:6:void cHwUSB_0::EndpointOUT::start()	16	static
USB_MCU.cpp:299:6:void cHwUSB_0::EndpointOUT::setStall()	16	static
USB_MCU.cpp:317:6:void cHwUSB_0::EndpointOUT::clrStall()	16	static
USB_MCU.cpp:324:6:WORD cHwUSB_0::EndpointOUT::read(BYTE*, WORD)	32	static
USB_MCU.cpp:339:6:void cHwUSB_0::EndpointOUT::readFromFifo(WORD)	24	static
USB_MCU.cpp:355:6:void cHwUSB_0::EndpointOUT::receive()	24	static
USB_MCU.cpp:380:6:void cHwUSB_0::EndpointOUT::receiveZLP()	16	static
USB_MCU.cpp:393:7:DWORD cHwUSB_0::EndpointOUT::getInterrupt()	16	static
USB_MCU.cpp:399:6:void cHwUSB_0::EndpointOUT::clrInterrupt(DWORD)	16	static
USB_MCU.cpp:413:1:cHwUSB_0::cHwUSB_0(cHwUSBdesc&)	32	static
USB_MCU.cpp:428:6:virtual void cHwUSB_0::start()	32	static
USB_MCU.cpp:518:13:void cHwUSB_0::isr()	56	static
USB_MCU.cpp:708:6:virtual void cHwUSB_0::reset()	24	static
USB_MCU.cpp:736:6:virtual void cHwUSB_0::configure(BYTE)	16	static
USB_MCU.cpp:741:6:virtual void cHwUSB_0::setAddress(BYTE)	16	static
USB_MCU.cpp:750:6:virtual void cHwUSB_0::configEP(BYTE, WORD, BYTE)	24	static
USB_MCU.cpp:774:6:virtual void cHwUSB_0::setStallEP(BYTE)	24	static
USB_MCU.cpp:792:6:virtual void cHwUSB_0::clrStallEP(BYTE)	24	static
USB_MCU.cpp:806:6:virtual WORD cHwUSB_0::readEP(BYTE, BYTE*, WORD)	32	static
USB_MCU.cpp:820:6:virtual WORD cHwUSB_0::writeEP(BYTE, BYTE*, WORD)	32	static
USB_MCU.cpp:834:6:BYTE cHwUSB_0::CoreReset()	24	static
USB_MCU.cpp:862:7:DWORD cHwUSB_0::getInInterrupt()	16	static
USB_MCU.cpp:870:7:DWORD cHwUSB_0::getOutInterrupt()	16	static
USB_MCU.cpp:878:6:BYTE cHwUSB_0::isInterruptPending(DWORD)	16	static
USB_MCU.cpp:886:6:void cHwUSB_0::clrInterrupt(DWORD)	16	static
USB_MCU.cpp:895:8:void OTG_FS_IRQHandler()	8	static
MCU.cpp:40:6:WORD hton(WORD)	16	static
MCU.cpp:46:7:DWORD hton(DWORD)	16	static
MCU.cpp:54:6:WORD ntoh(WORD)	16	static
MCU.cpp:59:7:DWORD ntoh(DWORD)	16	static
ADC.cpp:20:1:cHwADC::cHwADC(BYTE, cHwTimer*)	24	static
ADC.cpp:39:6:virtual void cHwADC::enable(BYTE, BYTE)	24	static
ADC.cpp:62:13:virtual WORD cHwADC::get(BYTE)	24	static
ADC.cpp:74:13:virtual BYTE cHwADC::getNumberOfChannels()	16	static
ADC.cpp:80:13:virtual void cHwADC::update()	16	static
ADC.cpp:95:13:virtual void cHwADC::isr()	24	static
DAC.cpp:19:1:cHwDAC::cHwDAC(BYTE)	16	static
DAC.cpp:25:13:virtual BYTE cHwDAC::getNumberOfChannels()	16	static
Display.cpp:19:1:cHwDisplay::cHwDisplay(BYTE, BYTE)	16	static
Display.cpp:27:13:virtual BYTE cHwDisplay::getNumberOfLines()	16	static
Display.cpp:33:13:virtual BYTE cHwDisplay::getNumberOfColumns()	16	static
DisplayFont.cpp:17:1:cHwDisplayFont::cHwDisplayFont(const cHwDisplayFontProperties*, const BYTE*)	24	static
DisplayFont.cpp:26:7:BYTE cHwDisplayFont::getCharWidth() const	16	static
DisplayFont.cpp:32:6:BYTE cHwDisplayFont::getCharHeight() const	16	static
DisplayFont.cpp:38:6:void cHwDisplayFont::setChar(BYTE)	24	static
DisplayFont.cpp:50:6:BYTE cHwDisplayFont::getPixel(BYTE, BYTE)	32	static
DisplayGraphic.cpp:18:1:cHwDisplayGraphic::cHwDisplayGraphic(cHwDisplayFont, BYTE)	24	static
DisplayGraphic.cpp:33:6:virtual void cHwDisplayGraphic::setFont(cHwDisplayFont, BYTE)	24	static
DisplayGraphic.cpp:41:6:virtual void cHwDisplayGraphic::setZoom(BYTE)	16	static
DisplayGraphic.cpp:47:6:virtual void cHwDisplayGraphic::setBackColor(WORD)	16	static
DisplayGraphic.cpp:53:6:virtual void cHwDisplayGraphic::setPaintColor(WORD)	16	static
DisplayGraphic.cpp:59:6:virtual void cHwDisplayGraphic::setTextColor(WORD)	16	static
DisplayGraphic.cpp:65:6:virtual void cHwDisplayGraphic::gotoPixelPos(WORD, WORD)	16	static
DisplayGraphic.cpp:73:6:virtual void cHwDisplayGraphic::gotoTextPos(BYTE, BYTE)	24	static
DisplayGraphic.cpp:81:6:virtual void cHwDisplayGraphic::putChar(char)	56	static
DisplayGraphic.cpp:108:6:virtual void cHwDisplayGraphic::putPixel(WORD, WORD)	24	static
DisplayGraphic.cpp:115:6:virtual void cHwDisplayGraphic::putRectangle(WORD, WORD, WORD, WORD)	48	static
DisplayGraphic.cpp:132:6:virtual void cHwDisplayGraphic::putBitmap(WORD, WORD, WORD, WORD, const WORD*)	48	static
Ethernet.cpp:11:1:cHwEthernet::cHwEthernet(const cNetAddr<6>&)	16	static
Ethernet.cpp:21:6:virtual void cHwEthernet::update()	16	static
Ethernet.cpp:40:6:void cHwEthernet::setARP(cNetARP*)	16	static
Ethernet.cpp:46:6:void cHwEthernet::setIP(cNetIP*)	16	static
Ethernet.cpp:52:24:cNetAddr<4>& cHwEthernet::getIP()	16	static
Ethernet.cpp:62:6:bool cHwEthernet::isNewIP()	16	static
I2Cmaster.cpp:20:1:cHwI2Cmaster::cHwI2Cmaster(BYTE)	16	static
I2Cmaster.cpp:27:6:virtual BYTE cHwI2Cmaster::Device::read()	40	static
I2Cmaster.cpp:37:6:virtual BYTE cHwI2Cmaster::Device::read(BYTE)	40	static
I2Cmaster.cpp:47:6:virtual BYTE cHwI2Cmaster::Device::read(WORD)	40	static
I2Cmaster.cpp:59:6:virtual void cHwI2Cmaster::Device::read(BYTE*, BYTE)	40	static
I2Cmaster.cpp:65:6:virtual void cHwI2Cmaster::Device::read(BYTE, BYTE*, BYTE)	40	static
I2Cmaster.cpp:71:6:virtual void cHwI2Cmaster::Device::read(WORD, BYTE*, BYTE)	48	static
I2Cmaster.cpp:80:6:virtual void cHwI2Cmaster::Device::write(BYTE)	32	static
I2Cmaster.cpp:86:6:virtual void cHwI2Cmaster::Device::write(BYTE, BYTE)	32	static
I2Cmaster.cpp:92:6:virtual void cHwI2Cmaster::Device::write(WORD, BYTE)	40	static
I2Cmaster.cpp:101:6:virtual void cHwI2Cmaster::Device::write(BYTE*, BYTE)	40	static
I2Cmaster.cpp:107:6:virtual void cHwI2Cmaster::Device::write(BYTE, BYTE*, BYTE)	40	static
I2Cmaster.cpp:113:6:virtual void cHwI2Cmaster::Device::write(WORD, BYTE*, BYTE)	48	static
I2Cmaster.cpp:122:6:virtual BYTE cHwI2Cmaster::Device::isError()	24	static
I2Cmaster.cpp:132:6:virtual BYTE cHwI2Cmaster::write(BYTE, BYTE*, BYTE, BYTE*, BYTE)	32	static
I2Cmaster.cpp:169:6:virtual BYTE cHwI2Cmaster::read(BYTE, BYTE*, BYTE, BYTE*, BYTE)	40	static
I2Cmaster.cpp:217:1:cHwI2Cmaster_Emul::cHwI2Cmaster_Emul(cHwPort::Pin&, cHwPort::Pin&, cHwI2Cmaster::MODE)	24	static
I2Cmaster.cpp:243:6:virtual void cHwI2Cmaster_Emul::wait()	16	static
I2Cmaster.cpp:249:6:virtual void cHwI2Cmaster_Emul::waitForAckn()	24	static
I2Cmaster.cpp:268:6:virtual void cHwI2Cmaster_Emul::start()	16	static
I2Cmaster.cpp:284:6:virtual void cHwI2Cmaster_Emul::stop()	16	static
I2Cmaster.cpp:299:6:virtual void cHwI2Cmaster_Emul::sendAddr(BYTE)	16	static
I2Cmaster.cpp:305:6:virtual void cHwI2Cmaster_Emul::writeByte(BYTE)	24	static
I2Cmaster.cpp:334:6:virtual BYTE cHwI2Cmaster_Emul::readByteNack()	24	static
I2Cmaster.cpp:367:6:virtual BYTE cHwI2Cmaster_Emul::readByteAck()	24	static
I2Cslave.cpp:17:1:cHwI2Cslave::cHwI2Cslave(cHwI2Cslave::DataHandler&, BYTE)	24	static
Memory.cpp:19:1:cHwMemory::cHwMemory(DWORD, BYTE)	24	static
Memory.cpp:27:13:virtual void cHwMemory::write(DWORD, BYTE)	24	static
Memory.cpp:36:13:virtual BYTE cHwMemory::read(DWORD)	16	static
Memory.cpp:46:13:virtual void cHwMemory::clear(DWORD)	24	static
Memory.cpp:55:14:virtual DWORD cHwMemory::getSize()	16	static
Memory.cpp:61:13:virtual bool cHwMemory::isFlash()	16	static
Port.cpp:28:1:cHwPort::Pin::Pin(cHwPort&, BYTE)	24	static
Port.cpp:38:1:cHwPort::Pin::Pin(cHwPort&, BYTE, cHwPort::Mode)	24	static
RTC.cpp:19:1:cHwRTC::cHwRTC()	16	static
SPImaster.h:90:14:void cHwSPImaster::Device::start()	16	static
SPImaster.h:98:14:void cHwSPImaster::Device::stop()	16	static
SPImaster.cpp:19:1:cHwSPImaster::cHwSPImaster()	16	static
SPImaster.cpp:25:6:virtual BYTE cHwSPImaster::Device::transceive(BYTE)	24	static
SPImaster.cpp:39:6:virtual void cHwSPImaster::Device::transceive(BYTE*, WORD)	40	static
SPImaster.cpp:55:13:virtual BYTE cHwSPImaster::Device::read()	16	static
SPImaster.cpp:61:13:virtual void cHwSPImaster::Device::read(BYTE*, WORD)	40	static
SPImaster.cpp:77:13:virtual void cHwSPImaster::Device::write(BYTE)	16	static
SPImaster.cpp:83:13:virtual void cHwSPImaster::Device::write(WORD)	16	static
SPImaster.cpp:96:13:virtual void cHwSPImaster::Device::write(BYTE*, WORD)	32	static
SPImaster.cpp:112:13:virtual void cHwSPImaster::Device::writeExt(BYTE, BYTE)	16	static
SPImaster.cpp:125:13:virtual void cHwSPImaster::Device::writeExt(BYTE, WORD)	16	static
SPIslave.cpp:17:1:cHwSPIslave::cHwSPIslave(cHwSPIslave::DataHandler&)	16	static
Timer.cpp:19:7:virtual DWORD cHwTimer::getCycleTime()	16	static
Timer.cpp:25:6:virtual void cHwTimer::add(cList::Item*)	16	static
Timer.cpp:31:13:virtual void cHwTimer::isrHandler()	16	static
UART.cpp:19:1:cHwUART::cHwUART(BYTE, BYTE)	16	static
UART.cpp:29:13:virtual void cHwUART::isrRx()	24	static
UART.cpp:37:13:virtual void cHwUART::isrTx()	24	static
UART.cpp:56:6:virtual void cHwUART::transmitByte(BYTE)	16	static
UART.cpp:96:6:virtual void cHwUART::set(BYTE)	16	static
UART.cpp:102:6:virtual void cHwUART::set(const BYTE*, BYTE)	24	static
UART.cpp:111:6:virtual void cHwUART::set(const char*)	16	static
UART.cpp:119:13:virtual bool cHwUART::isTxBufferFull()	16	static
UART.cpp:125:6:virtual bool cHwUART::get(BYTE*)	24	static
UART.cpp:141:6:virtual BYTE cHwUART::get()	24	static
USBhardware.cpp:19:1:cHwUSB::cHwUSB(cHwUSBdesc&)	16	static
USBhardware.cpp:28:6:virtual void cHwUSB::eventHandler(BYTE, BYTE)	24	static
USBctrl.cpp:21:1:cHwUSBctrl::cHwUSBctrl(cHwUSB&)	24	static
USBctrl.cpp:34:6:virtual void cHwUSBctrl::setup()	32	static
USBctrl.cpp:52:6:virtual void cHwUSBctrl::in()	16	static
USBctrl.cpp:66:6:virtual void cHwUSBctrl::out()	16	static
USBctrl.cpp:83:15:void cHwUSBctrl::ReqDevice()	16	static
USBctrl.cpp:116:15:void cHwUSBctrl::ReqInterface()	16	static
USBctrl.cpp:149:15:void cHwUSBctrl::ReqEndpoint()	16	static
USBctrl.cpp:185:15:void cHwUSBctrl::ReqDeviceStd_GetStatus()	32	static
USBctrl.cpp:191:15:void cHwUSBctrl::ReqDeviceStd_SetAddress()	24	static
USBctrl.cpp:197:15:void cHwUSBctrl::ReqDeviceStd_GetDescriptor()	56	static
USBctrl.cpp:223:15:void cHwUSBctrl::ReqDeviceStd_GetConfiguration()	32	static
USBctrl.cpp:230:16:void cHwUSBctrl::ReqDeviceStd_SetConfiguration()	72	static
USBctrl.cpp:272:16:void cHwUSBctrl::ReqInterfaceStd_GetStatus()	16	static
USBctrl.cpp:279:16:void cHwUSBctrl::ReqInterfaceStd_GetDescriptor()	48	static
USBctrl.cpp:295:16:void cHwUSBctrl::ReqInterfaceStd_GetInterface()	16	static
USBctrl.cpp:302:16:void cHwUSBctrl::ReqInterfaceStd_SetInterface()	16	static
USBctrl.cpp:309:16:void cHwUSBctrl::ReqInterfaceClass()	56	static
USBctrl.cpp:354:15:void cHwUSBctrl::ReqEndpointStd_ClrFeature()	32	static
USBctrl.cpp:373:15:void cHwUSBctrl::ReqEndpointStd_SetFeature()	32	static
USBctrl.cpp:394:15:virtual void cHwUSBctrl::Stall()	16	static
USBdesc.cpp:19:14:virtual cDataPointer cHwUSBdesc::getDescriptorDevice()	24	static
USBdesc.cpp:34:14:virtual cDataPointer cHwUSBdesc::getDescriptorConfig(BYTE)	32	static
USBdesc.cpp:49:14:virtual cDataPointer cHwUSBdesc::getDescriptorInterface(BYTE, BYTE)	32	static
USBdesc.cpp:65:14:virtual cDataPointer cHwUSBdesc::getDescriptorEndpoint(BYTE, BYTE, BYTE)	32	static
USBdesc.cpp:82:14:virtual cDataPointer cHwUSBdesc::getDescriptorHID(BYTE, BYTE, BYTE)	32	static
USBdesc.cpp:99:14:virtual cDataPointer cHwUSBdesc::getDescriptorHIDreport(BYTE, BYTE, BYTE)	32	static
USBdesc.cpp:116:14:virtual cDataPointer cHwUSBdesc::getDescriptorString(BYTE)	32	static
USBdesc.cpp:131:6:virtual BYTE cHwUSBdesc::getMaxPacketSize0()	32	static
USBdesc.cpp:142:6:virtual BYTE cHwUSBdesc::getConfigDeviceStatus(BYTE)	32	static
USBendpoint.cpp:19:1:cHwUSBendpoint::cHwUSBendpoint(cHwUSB&, cHwUSBinterf*, BYTE, WORD, BYTE)	24	static
USBendpoint.cpp:33:1:cHwUSBendpoint::cHwUSBendpoint(cHwUSB&, BYTE, WORD)	24	static
USBendpoint.cpp:45:6:void cHwUSBendpoint::in()	16	static
USBendpoint.cpp:59:6:void cHwUSBendpoint::inCtrl()	16	static
USBendpoint.cpp:70:6:void cHwUSBendpoint::out()	24	static
USBendpoint.cpp:97:6:void cHwUSBendpoint::outCtrl()	24	static
USBendpoint.cpp:114:6:WORD cHwUSBendpoint::readData()	40	static
USBendpoint.cpp:126:6:void cHwUSBendpoint::writeData()	40	static
USBendpoint.cpp:137:6:void cHwUSBendpoint::writeData(const cDataPointer&)	16	static
USBendpoint.cpp:144:6:void cHwUSBendpoint::writeDataLen(const cDataPointer&, WORD)	40	static
USBendpoint.cpp:154:6:void cHwUSBendpoint::writeAcknowledge()	24	static
USBendpoint.cpp:160:6:void cHwUSBendpoint::readAcknowledge()	32	static
USBendpoint.cpp:168:6:void cHwUSBendpoint::setConfiguration()	24	static
USBendpoint.cpp:174:6:void cHwUSBendpoint::stall()	16	static
USBendpoint.cpp:180:6:void cHwUSBendpoint::clrStall()	16	static
USBendpoint.cpp:186:6:void cHwUSBendpoint::clrFeature()	16	static
USBinterf.cpp:18:1:cHwUSBinterf::cHwUSBinterf(cHwUSB&, BYTE, BYTE)	64	static
NetStd.cpp:225:6:WORD Checksum(BYTE*, WORD, DWORD)	32	static
NetTransport.cpp:4:1:cNetTransport::Socket::Socket(cNetTransport&, cNetApplication&, cNetAddr<4>, WORD)	24	static
NetTransport.cpp:29:1:cNetTransport::cNetTransport()	16	static
NetTransport.cpp:37:6:virtual void cNetTransport::process()	24	static
NetTransport.cpp:49:6:virtual void cNetTransport::update()	24	static
NetTransport.cpp:61:6:virtual void cNetTransport::timeout()	24	static
NetTransport.cpp:73:13:virtual cNetAddr<4> cNetTransport::Socket::getRemoteIP()	24	static
NetARP.cpp:8:1:cNetARP::cNetARP(cHwEthernet&, cNetAddr<4>&)	24	static
NetARP.cpp:23:6:void cNetARP::process()	24	static
NetARP.cpp:58:6:void cNetARP::request(cNetAddr<4>&)	24	static
NetARP.cpp:76:6:void cNetARP::setTCP(cNetTCP*)	16	static
NetARP.cpp:82:6:void cNetARP::setUDP(cNetUDP*)	16	static
NetDHCP.cpp:9:1:cNetDHCP::cNetDHCP(cNetUDP&, const char*)	32	static
NetDHCP.cpp:24:6:virtual void cNetDHCP::OnReceive()	24	static
NetDHCP.cpp:57:6:virtual void cNetDHCP::OnError()	16	static
NetDHCP.cpp:62:6:virtual void cNetDHCP::OnTimeout()	16	static
NetDHCP.cpp:78:6:BYTE cNetDHCP::parse_options(BYTE*, int)	32	static
NetDHCP.cpp:100:6:void cNetDHCP::send(BYTE)	32	static
NetICMP.cpp:4:1:cNetICMP::cNetICMP(cNetIP&)	16	static
NetICMP.cpp:13:6:void cNetICMP::process()	40	static
NetIP.cpp:7:1:cNetIP::cNetIP(cHwEthernet&, const cNetAddr<4>&, cHwTimer&)	24	static
NetIP.cpp:27:6:void cNetIP::process()	16	static
NetIP.cpp:45:6:void cNetIP::update()	16	static
NetIP.cpp:62:6:void cNetIP::create(cNetAddr<6>, cNetAddr<4>, WORD, WORD)	32	static
NetIP.cpp:88:13:void cNetIP::setTCP(cNetTCP*)	16	static
NetIP.cpp:95:13:void cNetIP::setUDP(cNetUDP*)	16	static
NetIP.cpp:102:13:void cNetIP::setICMP(cNetICMP*)	16	static
NetTCP.cpp:9:1:cNetTCP::cNetTCP(cNetIP&)	16	static
NetTCP.cpp:20:6:void cNetTCP::create(cNetTCP::Socket&, WORD)	48	static
NetTCP.cpp:70:1:cNetTCP::Socket::Socket(cNetTCP&, cNetApplication&, cNetAddr<4>, WORD)	32	static
NetTCP.cpp:86:6:virtual void cNetTCP::Socket::open(cNetAddr<4>, WORD)	24	static
NetTCP.cpp:117:6:virtual void cNetTCP::Socket::close()	16	static
NetTCP.cpp:131:6:virtual BYTE cNetTCP::Socket::isConnected()	16	static
NetTCP.cpp:138:6:virtual BYTE cNetTCP::Socket::isReady()	16	static
NetTCP.cpp:145:6:virtual void cNetTCP::Socket::clear()	16	static
NetTCP.cpp:151:6:virtual void cNetTCP::Socket::fillBuffer(char)	24	static
NetTCP.cpp:168:6:virtual void cNetTCP::Socket::send()	16	static
NetTCP.cpp:179:6:virtual BYTE cNetTCP::Socket::get(char*)	16	static
NetTCP.cpp:190:7:virtual BYTE* cNetTCP::Socket::getDataPtr()	16	static
NetTCP.cpp:196:6:virtual void cNetTCP::Socket::setDataLength(WORD)	16	static
NetTCP.cpp:203:6:virtual BYTE cNetTCP::Socket::process()	48	static
NetTCP.cpp:379:6:virtual void cNetTCP::Socket::update()	16	static
NetTCP.cpp:392:6:virtual void cNetTCP::Socket::timeout()	16	static
NetTCP.cpp:419:6:virtual void cNetTCP::handleARP(cNetAddr<4>, cNetAddr<6>)	32	static
NetUDP.cpp:5:1:cNetUDP::cNetUDP(cNetIP&)	16	static
NetUDP.cpp:16:6:void cNetUDP::create(cNetUDP::Socket&, WORD)	48	static
NetUDP.cpp:45:1:cNetUDP::Socket::Socket(cNetUDP&, cNetApplication&, cNetAddr<4>, WORD, WORD)	32	static
NetUDP.cpp:61:6:virtual void cNetUDP::Socket::open(cNetAddr<4>, WORD)	24	static
NetUDP.cpp:81:6:virtual void cNetUDP::Socket::close()	16	static
NetUDP.cpp:87:6:virtual BYTE cNetUDP::Socket::isConnected()	16	static
NetUDP.cpp:93:6:virtual BYTE cNetUDP::Socket::isReady()	16	static
NetUDP.cpp:100:6:virtual void cNetUDP::Socket::clear()	16	static
NetUDP.cpp:106:6:virtual void cNetUDP::Socket::fillBuffer(char)	24	static
NetUDP.cpp:123:6:virtual void cNetUDP::Socket::send()	16	static
NetUDP.cpp:131:6:virtual BYTE cNetUDP::Socket::get(char*)	16	static
NetUDP.cpp:142:7:virtual BYTE* cNetUDP::Socket::getDataPtr()	16	static
NetUDP.cpp:148:6:virtual void cNetUDP::Socket::setDataLength(WORD)	16	static
NetUDP.cpp:155:6:virtual BYTE cNetUDP::Socket::process()	40	static
NetUDP.cpp:196:6:virtual void cNetUDP::Socket::update()	16	static
NetUDP.cpp:212:6:virtual void cNetUDP::Socket::timeout()	16	static
NetUDP.cpp:234:6:virtual void cNetUDP::handleARP(cNetAddr<4>, cNetAddr<6>)	32	static
devAnalog.cpp:16:1:cDevAnalog::cDevAnalog(BYTE, float, float)	24	static
devAnalogIn.cpp:19:1:cDevAnalogIn::cDevAnalogIn(BYTE, float, float)	24	static
devAnalogIn.cpp:31:14:virtual float cDevAnalogIn::get()	24	static
devAnalogIn.cpp:37:8:virtual cDevAnalogIn::operator float()	16	static
devAnalogIn.cpp:43:6:void cDevAnalogIn::calibrate(float, float, float, float)	32	static
devAnalogInADC.cpp:19:1:cDevAnalogInADC::cDevAnalogInADC(cHwADC&, BYTE, float, float, BYTE)	32	static
devAnalogInADC.cpp:33:6:virtual WORD cDevAnalogInADC::getRaw()	16	static
devAnalogInADC.cpp:38:6:virtual void cDevAnalogInADC::enable()	16	static
devAnalogOut.cpp:19:1:cDevAnalogOut::cDevAnalogOut(BYTE, float, float)	24	static
devAnalogOut.cpp:31:6:virtual void cDevAnalogOut::set(float)	24	static
devAnalogOut.cpp:39:14:virtual float cDevAnalogOut::operator=(float)	16	static
devAnalogOutDAC.cpp:19:1:cDevAnalogOutDAC::cDevAnalogOutDAC(cHwDAC&, BYTE, float, float)	32	static
devAnalogOutDAC.cpp:32:6:virtual void cDevAnalogOutDAC::setRaw(WORD)	16	static
devAnalogOutPWM.cpp:20:1:cDevAnalogOutPWM::cDevAnalogOutPWM(cHwTimer&, cHwTimer::Mode, BYTE, float, float)	32	static
devAnalogOutPWM.cpp:34:6:virtual void cDevAnalogOutPWM::setRaw(WORD)	16	static
devAnalogOutPWM.cpp:45:1:cDevAnalogOutPWMemul::cDevAnalogOutPWMemul(cHwTimer&, cDevDigital&, BYTE, float, float)	32	static
devAnalogOutPWM.cpp:62:6:virtual void cDevAnalogOutPWMemul::setRaw(WORD)	24	static
devAnalogOutPWM.cpp:68:6:virtual void cDevAnalogOutPWMemul::update()	16	static
devDigital.cpp:19:1:cDevDigital::cDevDigital(cHwPort&, BYTE, cDevDigital::Mode, bool)	24	static
devDigital.cpp:34:6:virtual void cDevDigital::setMode(cDevDigital::Mode)	16	static
devDigital.cpp:40:6:virtual void cDevDigital::set(bool)	16	static
devDigital.cpp:47:6:virtual bool cDevDigital::get()	16	static
devDigitalIndicator.cpp:19:1:cDevDigitalIndicator::cDevDigitalIndicator(cDevDigital&, cHwTimer&)	24	static
devDigitalIndicator.cpp:46:6:virtual void cDevDigitalIndicator::update()	16	static
devDisplay.cpp:16:1:cDevDisplay::cDevDisplay()	16	static
devDisplayChar.cpp:20:1:cDevDisplayChar::cDevDisplayChar(cHwDisplay&)	16	static
devDisplayChar.cpp:29:6:virtual void cDevDisplayChar::clear()	16	static
devDisplayChar.cpp:35:6:virtual void cDevDisplayChar::refresh()	16	static
devDisplayChar.cpp:41:6:)	56	static
devDisplayChar.cpp:73:6:virtual void cDevDisplayChar::printf(BYTE, BYTE, const char*)	32	static
cmath:463:3:constexpr float std::sqrt(float)	16	static
devDisplayGraphic.cpp:19:1:cDevDisplayGraphic::cDevDisplayGraphic(cHwDisplayGraphic&)	16	static
devDisplayGraphic.cpp:28:6:virtual void cDevDisplayGraphic::clear()	16	static
devDisplayGraphic.cpp:35:6:virtual void cDevDisplayGraphic::refresh()	16	static
devDisplayGraphic.cpp:41:6:)	56	static
devDisplayGraphic.cpp:73:6:virtual void cDevDisplayGraphic::setFont(cHwDisplayFont, BYTE)	40	static
devDisplayGraphic.cpp:80:6:virtual void cDevDisplayGraphic::setZoom(BYTE)	16	static
devDisplayGraphic.cpp:86:6:virtual void cDevDisplayGraphic::setBackColor(WORD)	16	static
devDisplayGraphic.cpp:92:6:virtual void cDevDisplayGraphic::setTextColor(WORD)	16	static
devDisplayGraphic.cpp:98:6:)	64	static
devDisplayGraphic.cpp:130:6:virtual void cDevDisplayGraphic::drawText(WORD, WORD, const char*)	32	static
devDisplayGraphic.cpp:146:6:virtual void cDevDisplayGraphic::drawPixel(WORD, WORD, WORD)	24	static
devDisplayGraphic.cpp:155:6:virtual void cDevDisplayGraphic::drawRectangle(WORD, WORD, WORD, WORD, WORD)	40	static
devDisplayGraphic.cpp:166:6:virtual void cDevDisplayGraphic::drawFrame(WORD, WORD, WORD, WORD, WORD, WORD)	40	static
devDisplayGraphic.cpp:183:6:virtual void cDevDisplayGraphic::drawCircle(WORD, WORD, WORD, WORD)	48	static
devDisplayGraphic.cpp:197:6:virtual void cDevDisplayGraphic::drawLine(WORD, WORD, WORD, WORD, WORD, WORD)	72	static
devDisplayGraphic.cpp:249:6:virtual void cDevDisplayGraphic::drawBitmap(WORD, WORD, WORD, WORD, const WORD*)	40	static
devDisplayGraphic.cpp:259:16:virtual cHwDisplayFont cDevDisplayGraphic::getDefaultFont()	16	static
devMemory.cpp:16:1:cDevMemory::cDevMemory(cHwMemory&, WORD)	24	static
devMemory.cpp:27:6:WORD cDevMemory::allocate(WORD)	24	static
devMemory.cpp:36:6:void cDevMemory::write(BYTE*, WORD, WORD)	40	static
devMemory.cpp:49:6:void cDevMemory::read(BYTE*, WORD, WORD)	40	static
devMemory.cpp:60:6:void cDevMemory::clear()	16	static
devMemory.cpp:68:6:void cDevMemory::setValid()	16	static
devMemory.cpp:76:6:BYTE cDevMemory::isValid()	16	static
devTextIO.cpp:24:1:cDevTextIO::cDevTextIO(BYTE, BYTE, const char*, const char*)	24	static
devTextIO.cpp:41:7:char* cDevTextIO::getString()	24	static
devTextIO.cpp:97:6:)	36	static
devTextIO_UART.cpp:19:1:cDevTextIO_UART::cDevTextIO_UART(cHwUART&, BYTE, BYTE, const char*, const char*)	32	static
devTextIO_UART.cpp:36:13:virtual void cDevTextIO_UART::set(BYTE*, BYTE)	24	static
devTextIO_UART.cpp:42:13:virtual bool cDevTextIO_UART::get(BYTE*)	16	static
devControlEncoder.cpp:14:1:cDevControlEncoder::cDevControlEncoder(cDevDigital*, cHwTimer*)	24	static
devControlEncoder.cpp:28:28:cDevControlEncoder::tEvent cDevControlEncoder::get()	24	static
devControlEncoder.cpp:43:6:virtual void cDevControlEncoder::update()	24	static
devControlEncoder.cpp:67:28:virtual cDevControlEncoder::tEvent cDevControlEncoder::getCtrl()	16	static
devControlEncoderJoystick.cpp:14:1:cDevControlEncoderJoystick::cDevControlEncoderJoystick(cDevDigital*, cDevDigital*, cDevDigital*, cHwTimer*, WORD)	32	static
devControlEncoderJoystick.cpp:37:28:virtual cDevControlEncoder::tEvent cDevControlEncoderJoystick::getIncrement()	16	static
devControlEncoderRotaryknob.cpp:15:1:cDevControlEncoderRotaryKnob::cDevControlEncoderRotaryKnob(cDevDigital*, cDevDigital*, cDevDigital*, cHwTimer*)	24	static
devControlEncoderRotaryknob.cpp:27:28:virtual cDevControlEncoder::tEvent cDevControlEncoderRotaryKnob::getIncrement()	16	static
Std.cpp:13:8:void __cxa_pure_virtual()	8	static
CRC.cpp:17:1:cCRC::cCRC(cCRC::MODE, WORD, WORD)	40	static
CRC.cpp:41:1:cCRC::~cCRC()	16	static
CRC.cpp:50:6:WORD cCRC::operator()(const BYTE*, DWORD)	48	static
CRC.cpp:72:6:void cCRC::operator()(BYTE)	32	static
CRC.cpp:88:13:WORD cCRC::tabMethod(BYTE)	24	static
List.cpp:19:1:cList::Item::Item(cList*)	16	static
List.cpp:29:14:cList::Item* cList::Item::getNext()	16	static
List.cpp:35:14:cList::Item* cList::Item::getPrev(cList&)	24	static
List.cpp:51:1:cList::cList()	16	static
List.cpp:57:6:BYTE cList::add(cList::Item*)	24	static
List.cpp:94:14:cList::Item* cList::getFirst()	16	static
List.cpp:100:14:cList::Item* cList::operator[](WORD)	24	static
List.cpp:111:6:void cList::updateAll()	24	static
Timer.cpp:16:1:cTimer::cTimer()	16	static
Timer.cpp:24:6:void cTimer::start(WORD, WORD)	16	static
Timer.cpp:32:6:void cTimer::start()	16	static
Timer.cpp:39:6:BYTE cTimer::timeout(WORD, WORD)	16	static
Timer.cpp:50:6:BYTE cTimer::timeout()	24	static
Timer.cpp:72:6:BYTE cTimer::isRunning()	16	static
Timer.cpp:82:6:void cTimer::stop()	16	static
Timer.cpp:88:6:void cTimer::set(WORD, WORD)	24	static
TaskHandler.cpp:19:1:cTaskHandler::cTaskHandler(cHwTimer*)	16	static
TaskHandler.cpp:37:1:cTaskHandler::cTaskHandler(cTaskHandler*)	16	static
TaskHandler.cpp:52:14:virtual DWORD cTaskHandler::getCycleTime()	16	static
TaskHandler.cpp:58:22:virtual long unsigned int cTaskHandler::getTics()	16	static
TaskHandler.cpp:64:13:virtual void cTaskHandler::run()	16	static
TaskHandler.cpp:76:6:virtual void cTaskHandler::addTask(cTaskHandler::Task*)	16	static
TaskHandler.cpp:89:13:virtual void cTaskHandler::update()	16	static
TaskHandler.cpp:100:1:cTaskHandler::Task::Task(cTaskHandler&)	16	static
TaskHandler.cpp:111:1:cTaskHandler::Timer::Timer(cTaskHandler&, WORD, WORD)	24	static
TaskHandler.cpp:122:7:virtual DWORD cTaskHandler::Timer::getTics()	16	static
TaskHandler.cpp:128:7:virtual DWORD cTaskHandler::Timer::getTimeOfTic()	16	static
NetStd.h:98:5:cNetTYPE<T>::operator T() [with T = short unsigned int]	16	static
NetStd.h:93:10:void cNetTYPE<T>::operator=(T) [with T = short unsigned int]	16	static
Std.h:40:29:T MIN(T, T) [with T = short unsigned int]	16	static
Std.h:40:29:T MIN(T, T) [with T = unsigned char]	16	static
FIFO.h:33:5:cFifo<T>::cFifo(BYTE) [with T = unsigned char]	16	static
FIFO.h:110:10:BYTE cFifo<T>::operator<<(const T&) [with T = unsigned char]	24	static
FIFO.h:68:10:BYTE cFifo<T>::isEmpty() [with T = unsigned char]	24	static
FIFO.h:134:10:BYTE cFifo<T>::operator>>(T&) [with T = unsigned char]	24	static
FIFO.h:51:10:BYTE cFifo<T>::isFull() [with T = unsigned char]	24	static
DataPointer.h:112:24:cDataPointer::operator T*() [with T = void]	16	static
DataPointer.h:112:24:cDataPointer::operator T*() [with T = cHwUSBdesc::cEndpoint]	16	static
DataPointer.h:112:24:cDataPointer::operator T*() [with T = cHwUSBdesc::cDevice]	16	static
DataPointer.h:112:24:cDataPointer::operator T*() [with T = cHwUSBdesc::cConfiguration]	16	static
DataPointer.h:93:29:void cDataPointer::set(const T&) [with T = cDataPointer]	16	static
NetStd.h:25:10:BYTE cNetAddr<size>::operator==(const cNetAddr<size>&) const [with unsigned char size = 4]	16	static
NetStd.h:93:10:void cNetTYPE<T>::operator=(T) [with T = long unsigned int]	16	static
NetStd.h:25:10:BYTE cNetAddr<size>::operator==(const cNetAddr<size>&) const [with unsigned char size = 6]	16	static
NetStd.h:98:5:cNetTYPE<T>::operator T() [with T = long unsigned int]	16	static
Std.h:59:29:T RANGE(T, T, T) [with T = float]	24	static
SharedMem.h:32:5:cSharedMem<T>::cSharedMem() [with T = short unsigned int]	16	static
SharedMem.h:41:10:void cSharedMem<T>::operator<<(const T&) [with T = short unsigned int]	16	static
SharedMem.h:52:10:void cSharedMem<T>::operator>>(T&) [with T = short unsigned int]	16	static
FIFO.h:33:5:cFifo<T>::cFifo(BYTE) [with T = cDevControlEncoder::tEvent]	16	static
FIFO.h:68:10:BYTE cFifo<T>::isEmpty() [with T = cDevControlEncoder::tEvent]	24	static
FIFO.h:134:10:BYTE cFifo<T>::operator>>(T&) [with T = cDevControlEncoder::tEvent]	24	static
FIFO.h:51:10:BYTE cFifo<T>::isFull() [with T = cDevControlEncoder::tEvent]	24	static
FIFO.h:110:10:BYTE cFifo<T>::operator<<(const T&) [with T = cDevControlEncoder::tEvent]	24	static
